FROM php:8.3-apache
COPY ./docker/config/php/ext/ephe/swephp.so /usr/local/lib/php/extensions/no-debug-non-zts-20230831/

# Install system dependencies (including ICU for intl)
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    libpq-dev \
    libicu-dev \
  && docker-php-ext-configure pgsql --with-pgsql=/usr/local/pgsql \
  && docker-php-ext-install \
      intl \
      pdo \
      pdo_pgsql \
      pgsql \
      mbstring \
      exif \
      pcntl \
      bcmath \
      gd \
      zip \
  && pecl install redis \
  && docker-php-ext-enable redis \
  && apt-get install -y librdkafka-dev \
  && pecl install rdkafka \
  && docker-php-ext-enable rdkafka \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Install Xdebug
RUN pecl install xdebug \
    && docker-php-ext-enable xdebug

# Enable Apache modules (including proxy modules needed for WSS proxying)
RUN a2enmod rewrite ssl headers proxy proxy_wstunnel proxy_http

# Set working directory
WORKDIR /var/www/html/q.local/

# Copy application files
COPY . /var/www/html/q.local/
# backup
RUN mkdir -p docker/config/ssl/backup \
  && cp docker/config/ssl/q.local.* docker/config/ssl/backup/ || true

# TLS certificates should be provided by the host (for example: use mkcert)
# and mounted into /etc/ssl/localcerts inside the container. Generating certs
# during image build is avoided to keep the image deterministic and to allow
# using a local CA trusted by the host/browser.
# Install PHP dependencies if composer.json exists
RUN if [ -f composer.json ]; then \
      composer install --no-dev --optimize-autoloader; \
    fi

# Set permissions
RUN chown -R www-data:www-data /var/www/html/q.local/ \
    && chmod -R 755 /var/www/html/q.local/ \
    && chmod -R 777 writable/

EXPOSE 80 443

CMD ["apache2-foreground"]
