
# docker-compose.staging.yml
services:
  postgres:
    image: postgres:17
    container_name: q-local-postgres-staging
    env_file:
      - .env.staging
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: q-local-pgadmin-staging
    env_file:
      - .env.staging
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin  
    ports:
      - "${PGADMIN_PORT:-8888}:80"
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped
    
  web:
    build: .
    container_name: q-local-web-staging
    env_file:
      - .env.staging
      - .env  # CodeIgniter env file
    volumes:
      - .:/var/www/html/q.local/
      - ./config/apache/q.local.staging.conf:/etc/apache2/sites-available/q.local.conf:ro
      - ./config/apache/q.local.staging.conf:/etc/apache2/sites-enabled/q.local.conf:ro
      - ./config/ssl:/etc/ssl/localcerts:ro
      - ./config/php/custom.staging.ini:/usr/local/etc/php/conf.d/custom.ini:ro
    ports:
      - "80:80" 
      - "443:443"
    depends_on:
      - postgres
    command: >
      bash -c "
        a2enmod rewrite &&
        a2enmod ssl &&
        a2enmod headers &&
        a2ensite q.local &&
        apache2-foreground
      "
    networks:
      app-network:
        ipv4_address: ${WEB_IP:-68.168.218.159}
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET:-68.168.218.159/24}
